import os
import subprocess
from pdf2image import convert_from_path
import argparse


TESSERACT_PATH = "C:\\ZSY\\Applications\\tesseract\\tesseract.exe"
INTERMEDIATE_PATH = "./intermediate"

def pdf_to_text(pdf_path, tesseract_path=TESSERACT_PATH, intermediate_path=INTERMEDIATE_PATH):
    pdf_name = os.path.splitext(os.path.basename(pdf_path))[0]
    output_text_file = f"_{pdf_name}.txt"

    # Convert PDF pages to images
    os.makedirs(intermediate_path, exist_ok=True)
    images = convert_from_path(pdf_path, output_folder=intermediate_path, dpi=300)

    temp_files = []

    for i, image in enumerate(images):
        temp_img = f"{intermediate_path}/{pdf_name}_page_{i}.png"
        image.save(temp_img, "PNG")
        temp_files.append(temp_img)

        # Run Tesseract on each image and append output to text file
        command = [tesseract_path, temp_img, f"{intermediate_path}/{pdf_name}_page_{i}"]
        subprocess.run(command)

    # Combine all page text into a single output file
    with open(output_text_file, "w", encoding='utf-8') as outfile:
        for i in range(len(temp_files)):
            txt_file = f"{intermediate_path}/{pdf_name}_page_{i}.txt"
            with open(txt_file, "r", encoding='utf-8') as infile:
                outfile.write(infile.read() + "\n")
            os.remove(txt_file)

    # Clean up temporary image files
    for temp_img in temp_files:
        os.remove(temp_img)
    # Remove any intermediate .ppm files generated by pdf2image
    for ppm_file in os.listdir(intermediate_path):
        if ppm_file.endswith(".ppm"):
            os.remove(os.path.join(intermediate_path, ppm_file))

    return output_text_file


if __name__ == "__main__":
    # Set up command line argument parsing
    parser = argparse.ArgumentParser(description="Convert PDF to text using OCR.")
    parser.add_argument("pdf_path", help="Path to the PDF file to be converted")
    args = parser.parse_args()

    # Usage:
    text_file = pdf_to_text(args.pdf_path)
    print(f"Output saved to {text_file}")
